/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package reception;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import static java.lang.Thread.sleep;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.ERROR_MESSAGE;
import static javax.swing.JOptionPane.showMessageDialog;

/**
 *
 * @author LEVY
 */
public class registration extends javax.swing.JFrame {

    /**
     * Creates new form registration
     */
    public registration() {
        initComponents();
    Dimension screenSize,frameSize;
int x,y;
screenSize=Toolkit.getDefaultToolkit().getScreenSize();
frameSize=getSize();
x=(screenSize.width-frameSize.width)/2;
y=(screenSize.height-frameSize.height)/2;
setLocation(x, y);

   lec();
        setIcon();
        CurrentDate();
        
        client();
    }
     
     
    private void setIcon() {
    
       setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("GLOBAL.JPG")));
    }
 public Void lec(){
        try{
        Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/stok", "root", "");
         String query = "SELECT `name`FROM `reg`";
         PreparedStatement st;
         st = con.prepareStatement(query);
         ResultSet rs = st.executeQuery();
         while(rs.next()){
         disp.addItem(rs.getString("name"));
         }
   }
   catch(SQLException ex){
         Logger.getLogger(flog.class.getName()).log(Level.SEVERE, null, ex);
        }
        return null;
    
    }
 public Void client(){
        try{
        Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/stok", "root", "");
         String query = "SELECT `name`FROM `visit`";
         PreparedStatement st;
         st = con.prepareStatement(query);
         ResultSet rs = st.executeQuery();
         while(rs.next()){
         disp1.addItem(rs.getString("name"));
         }
   }
   catch(SQLException ex){
         Logger.getLogger(flog.class.getName()).log(Level.SEVERE, null, ex);
        }
        return null;
    
    }
public void CurrentDate() {

        Thread clock = new Thread() {
            public void run() {
                for (;;) {

                    Calendar cal = new GregorianCalendar();
                    int month = cal.get(Calendar.MONTH);
                    int year = cal.get(Calendar.YEAR);
                    int day = cal.get(Calendar.DAY_OF_MONTH);

                    //date.setText(day+"-"+(month+1)+"-"+(year));
                    dat.setCalendar(cal);

                    int second = cal.get(Calendar.SECOND);
                    int mint = cal.get(Calendar.MINUTE);
                    int hour = cal.get(Calendar.HOUR);
                    // time.setText(hour+":"+(mint)+":"+(second));  

                    try {
                        sleep(1000);

                    } catch (InterruptedException ex) {
                        Logger.getLogger(login.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        };

        clock.start();

    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        show = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        num = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        cont = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        dat = new com.toedter.calendar.JDateChooser();
        disp = new javax.swing.JComboBox<>();
        fac1 = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        cont1 = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        disp1 = new javax.swing.JComboBox<>();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        fac2 = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        fac = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        adm = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(0, 51, 153));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("ATLAS COLLEGE  MANAGEMENT SYSTEM");

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "REGISTRATION", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 24), new java.awt.Color(0, 0, 204))); // NOI18N

        show.setBorder(null);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 204));
        jLabel1.setText("FULL NAMES");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 204));
        jLabel2.setText("COURSE");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 204));
        jLabel4.setText("DATE REGISTERED");

        num.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        num.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 204)));
        num.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                numKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                numKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                numKeyTyped(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(255, 255, 255));
        jButton2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/reception/save.png"))); // NOI18N
        jButton2.setText("Save");
        jButton2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        cont.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        cont.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 204)));
        cont.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                contKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                contKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                contKeyTyped(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 204));
        jLabel6.setText("CONTACTS");

        dat.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        disp.setBackground(new java.awt.Color(255, 255, 153));
        disp.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        disp.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Registered Students" }));
        disp.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        disp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dispActionPerformed(evt);
            }
        });

        fac1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        fac1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Course" }));
        fac1.setBorder(null);
        fac1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        fac1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fac1MouseClicked(evt);
            }
        });
        fac1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fac1ActionPerformed(evt);
            }
        });
        fac1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                fac1KeyPressed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 204));
        jLabel7.setText("LOCATION");

        cont1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        cont1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 204)));
        cont1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cont1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cont1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cont1KeyTyped(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(255, 255, 255));
        jButton5.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/reception/Clear-icon.png"))); // NOI18N
        jButton5.setText("Refresh");
        jButton5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jButton5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        disp1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        disp1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Client's Names" }));
        disp1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        disp1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                disp1ActionPerformed(evt);
            }
        });

        jComboBox1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Gender", "MALE", "FEMALE" }));
        jComboBox1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        jComboBox1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBox1KeyPressed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 204));
        jLabel8.setText("GENDER");

        jLabel9.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 204));
        jLabel9.setText("TIME");

        fac2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        fac2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MORNING", "AFTERNOON", "EVENING" }));
        fac2.setBorder(null);
        fac2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        fac2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fac2MouseClicked(evt);
            }
        });
        fac2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fac2ActionPerformed(evt);
            }
        });
        fac2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                fac2KeyPressed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 0, 204));
        jLabel10.setText("STATUS");

        jComboBox2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "REGISTERED" }));
        jComboBox2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });
        jComboBox2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBox2KeyPressed(evt);
            }
        });

        fac.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        fac.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select School", "ICT", "LANGUAGE", "FOOD PRODUCTION", "PROFESSIONAL COURSES", "OTHER" }));
        fac.setBorder(null);
        fac.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        fac.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                facMouseClicked(evt);
            }
        });
        fac.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                facActionPerformed(evt);
            }
        });
        fac.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                facKeyPressed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 0, 204));
        jLabel11.setText("SCHOOL");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 204));
        jLabel5.setText("ADMISSION NUMBER");

        adm.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        adm.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 204)));
        adm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                admActionPerformed(evt);
            }
        });
        adm.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                admKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                admKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                admKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(show, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cont, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cont1, javax.swing.GroupLayout.DEFAULT_SIZE, 318, Short.MAX_VALUE)))
                    .addComponent(disp1, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(num, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(adm, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(disp, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addGap(116, 116, 116))
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(dat, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(fac2, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(fac1, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(fac, javax.swing.GroupLayout.Alignment.TRAILING, 0, 318, Short.MAX_VALUE)))))
                        .addGap(1, 1, 1)))
                .addGap(19, 19, 19))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(320, 320, 320))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(show, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(disp1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(disp, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(fac, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(adm, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(20, 20, 20)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(num, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(fac1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(20, 20, 20)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addComponent(fac2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(cont1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel7))
                                    .addComponent(jLabel9))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dat, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel8)
                                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(20, 20, 20))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cont, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/reception/back-icon.png"))); // NOI18N
        jButton1.setText("Back");
        jButton1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(255, 255, 255));
        jButton4.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/reception/delete.png"))); // NOI18N
        jButton4.setText("Delete");
        jButton4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(255, 255, 255));
        jButton3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/reception/edit.png"))); // NOI18N
        jButton3.setText("Update");
        jButton3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(314, 314, 314))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(122, 122, 122)
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                            .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void numKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_numKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            cont.requestFocus();
        }
    }//GEN-LAST:event_numKeyPressed

    private void numKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_numKeyReleased
//        num.addKeyListener(new KeyAdapter() {
//
//            public void keyTyped(KeyEvent e) {
//                char keyChar = e.getKeyChar();
//                if (Character.isLowerCase(keyChar)) {
//                    e.setKeyChar(Character.toUpperCase(keyChar));
//
//                }
//            }
//
//        });
        PreparedStatement st;
        try {
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/stok", "root", "");
            String sql = "SELECT * FROM reg WHERE adm= '" + adm.getText() + "'";
            // java.sql.PreparedStatement st;
            st = con.prepareStatement(sql);
            //st.setString(1, user.getText());
            ResultSet rs = st.executeQuery(sql);
            if (rs.next() == true) {

                JOptionPane.showMessageDialog(null, "" + adm.getText() + ", is are already registered into the System");
                adm.setText("");
                num.setText("");
            }

        } catch (SQLException ex) {
            Logger.getLogger(registration.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_numKeyReleased

    private void numKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_numKeyTyped
        num.addKeyListener(new KeyAdapter() {

            public void keyTyped(KeyEvent e) {
                char keyChar = e.getKeyChar();
                if (Character.isLowerCase(keyChar)) {
                    e.setKeyChar(Character.toUpperCase(keyChar));

                }
            }

        });
    }//GEN-LAST:event_numKeyTyped

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        
        if(adm.getText().trim().isEmpty()){
showMessageDialog(null, "FILL ALL FIELDS BEFORE SAVING RECORDS", "ATLAS COLLEGE RECEPTION MANAGEMENT SYSTEM", ERROR_MESSAGE);

}
else if( cont.getText().trim().isEmpty()){
showMessageDialog(null, "FILL ALL FIELDS BEFORE SAVING RECORDS", "ATLAS COLLEGE RECEPTION MANAGEMENT SYSTEM", ERROR_MESSAGE);

}

else if(cont1.getText().trim().isEmpty()){
showMessageDialog(null, "FILL ALL FIELDS BEFORE SAVING RECORDS", "ATLAS COLLEGE RECEPTION MANAGEMENT SYSTEM", ERROR_MESSAGE);
}
else{
        String admn =adm.getText();
        String name = num.getText();
        String phn = cont.getText();
        String loc = cont1.getText();
        String facc = String.valueOf(fac.getSelectedItem());
         String school = String.valueOf(fac1.getSelectedItem());
         String sta = String.valueOf(jComboBox2.getSelectedItem());
          String gender = String.valueOf(jComboBox1.getSelectedItem());
         String time = String.valueOf(fac2.getSelectedItem());
        Calendar cal = Calendar.getInstance();
        SimpleDateFormat dateformat = new SimpleDateFormat("yyyy-MM-dd");
        String dob = dateformat.format(dat.getDate());
        PreparedStatement st;
        try {
   
      Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/stok", "root", "");
            String sql = "SELECT * FROM reg WHERE adm= '" + adm.getText() + "'";
            // java.sql.PreparedStatement st;
            st = con.prepareStatement(sql);
            //st.setString(1, user.getText());
            ResultSet rs = st.executeQuery(sql);
            if (rs.next() == true) {

                JOptionPane.showMessageDialog(null, "" + adm.getText() + ", is are already registered into the System");
                registration l = new registration();
                            l.setVisible(true);
                            this.setVisible(false);  
            
            }

            else{
                String query = "INSERT INTO `reg`(`adm`,`name`, `cont`, `loc`, `coz`, `dep`, `dr`, `gender`, `time`)  VALUES  (?,?,?,?,?,?,?,?,?)";
                st = con.prepareStatement(query);
                st.setString(1, admn);
                st.setString(2, name);
                st.setString(3, phn);
                st.setString(4, loc);
                st.setString(5, facc);
                st.setString(6, school);
                st.setString(7, dob);
                st.setString(8, gender);
                st.setString(9, time);
                if(st.executeUpdate()>0){
                    JOptionPane.showMessageDialog(null, "New Record entered");
//                    dashbod l = new dashbod();
//                            l.setVisible(true);
//                            this.setVisible(false);    
                }
           
                
                  try{
         
          Class.forName("com.mysql.cj.jdbc.Driver");
          
            
                        String sqls = "UPDATE `visit` SET `status`=?  WHERE  name = '"+num.getText()+"'";
                        st = con.prepareStatement(sqls);
                      
                        st.setString(1, String.valueOf(jComboBox2.getSelectedItem()));
               
                        if(st.executeUpdate()>0){
                         
                           
                        }
                       
                        con.close();
       }catch(SQLException | ClassNotFoundException ex){
                        Logger.getLogger(flog.class.getName()).log(Level.SEVERE, null, ex);
                    } 
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
        } 
        } catch (SQLException ex) {
            Logger.getLogger(flog.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        
        
        
        
}
        
        
                 
         registration l = new registration();
                            l.setVisible(true);
                            this.setVisible(false);
        
        
        
        
        
        
        
        
        
        
        
        
        
   
    }//GEN-LAST:event_jButton2ActionPerformed

    private void contKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_contKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            cont1.requestFocus();
        }
    }//GEN-LAST:event_contKeyPressed

    private void contKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_contKeyReleased
        cont.addKeyListener(new KeyAdapter() {

            public void keyTyped(KeyEvent e) {
                char keyChar = e.getKeyChar();
                if (Character.isLowerCase(keyChar)) {
                    e.setKeyChar(Character.toUpperCase(keyChar));

                }
            }

        });
    }//GEN-LAST:event_contKeyReleased

    private void contKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_contKeyTyped
        char c = evt.getKeyChar();
        if (!(Character.isDigit(c) || (c == KeyEvent.VK_BACK_SPACE) || (c == keyEvent.VK_DELETE))) {
            evt.consume();

        } else if (cont.getText().length() >= 10) {
            evt.consume();
        }
    }//GEN-LAST:event_contKeyTyped

    private void dispActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dispActionPerformed
        try {
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/stok", "root", "");
            String query = "SELECT `adm`,`name`, `cont`, `loc`, `coz`, `dep`, `gender`, `time` FROM reg WHERE name ='" + disp.getSelectedItem() + "'";
            PreparedStatement st;
            st = con.prepareStatement(query);
            ResultSet rs = st.executeQuery();
            if (rs.next()) {
                adm.setText(rs.getString("adm"));
                num.setText(rs.getString("name"));
                cont.setText(rs.getString("cont"));
                cont1.setText(rs.getString("loc"));
                fac.setSelectedItem(rs.getString("coz"));
               fac1.setSelectedItem(rs.getString("dep"));
               jComboBox1.setSelectedItem(rs.getString("gender"));
                fac2.setSelectedItem(rs.getString("time"));
            } }catch (SQLException ex) {
                Logger.getLogger(flog.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_dispActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try{
            PreparedStatement st;

            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/stok", "root", "");
            String sqla = "SELECT * FROM reg WHERE id= '" + cont1.getText() + "'";

                String sql = "UPDATE `reg` SET `adm`=?,`name`=?,`cont`=?,`loc`=?,`coz`=?,`dep`=?,`gender`=?,`time`=? WHERE  name = '"+disp.getSelectedItem()+"'";
                st = con.prepareStatement(sql);
                st.setString(1, adm.getText());
                st.setString(2, num.getText());
                st.setString(3, cont.getText());
                 st.setString(4, cont1.getText());
                st.setString(5, String.valueOf(fac.getSelectedItem()));
              st.setString(6, String.valueOf(fac1.getSelectedItem()));
                st.setString(7, String.valueOf(jComboBox1.getSelectedItem()));
              st.setString(8, String.valueOf(fac2.getSelectedItem()));
              
              
              
                if(st.executeUpdate()>0){
                    JOptionPane.showMessageDialog(null, "Update Successful");
                   registration l = new registration();
                            l.setVisible(true);
                            this.setVisible(false);
                }

                con.close();
            }catch(SQLException | ClassNotFoundException ex){
                Logger.getLogger(flog.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        dashbod d = new dashbod();
        d.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        registration t  = new registration();
        t.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        JFrame frame = new JFrame();
        if (JOptionPane.showConfirmDialog(frame,"DO YOU WANT TO REMOVE THE STUDENT?","ATLAS INTERGRATED INFORMATION MANAGEMENT SYSTEM",
            JOptionPane.YES_NO_OPTION)==JOptionPane.YES_NO_OPTION){
        PreparedStatement st;
        try {
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/stok", "root", "");
            String query = "DELETE FROM `reg` WHERE name = '"+num.getText()+"'";
            st = con.prepareStatement(query);

            if(st.executeUpdate()>0){
                JOptionPane.showMessageDialog(null, "Student Successfully Removed from the System");
                 registration l = new registration();
                            l.setVisible(true);
                            this.setVisible(false);

            }

        } catch (SQLException ex) {
            Logger.getLogger(flog.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void fac1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fac1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_fac1MouseClicked

    private void fac1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fac1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fac1ActionPerformed

    private void fac1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fac1KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_fac1KeyPressed

    private void cont1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cont1KeyPressed
       if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jComboBox1.requestFocus();
        }
    }//GEN-LAST:event_cont1KeyPressed

    private void cont1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cont1KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_cont1KeyReleased

    private void cont1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cont1KeyTyped

    }//GEN-LAST:event_cont1KeyTyped

    private void disp1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_disp1ActionPerformed
                     try {
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/stok", "root", "");
            String query = "SELECT `name`, `cont`, `fac`,  `coz`,  `loc`,  `gen` FROM `visit` WHERE name ='" + disp1.getSelectedItem() + "'";
            PreparedStatement st;
            st = con.prepareStatement(query);
            ResultSet rs = st.executeQuery();
            if (rs.next()) {
                 num.setText(rs.getString("name"));
                cont.setText(rs.getString("cont"));
                fac.setSelectedItem(rs.getString("fac"));
                fac1.setSelectedItem(rs.getString("coz"));
                cont1.setText(rs.getString("loc"));
                jComboBox1.setSelectedItem(rs.getString("gen"));
                
               
        } }catch (SQLException ex) {
            Logger.getLogger(flog.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_disp1ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboBox1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBox1KeyPressed
       if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            fac.requestFocus();
        }
    }//GEN-LAST:event_jComboBox1KeyPressed

    private void fac2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fac2MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_fac2MouseClicked

    private void fac2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fac2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fac2ActionPerformed

    private void fac2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fac2KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_fac2KeyPressed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jComboBox2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBox2KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox2KeyPressed

    private void facMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_facMouseClicked
        //if(coz.getSelectedItem()=="ICT")
        //
        //     {
            //        try{
                //        Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/global", "root", "");
                //         String query = "SELECT `name`FROM `ict";
                //         PreparedStatement st;
                //         st = con.prepareStatement(query);
                //         ResultSet rs = st.executeQuery();
                //         while(rs.next()){
                    //         coz1.addItem(rs.getString("name"));
                    //         }
                //   }
            //   catch(SQLException ex){
                //         Logger.getLogger(admit.class.getName()).log(Level.SEVERE, null, ex);
                //        }
            //
            //     }
        //     if(coz.getSelectedItem()=="ENGLISH")
        //                 {
            //            try{
                //        Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/global", "root", "");
                //         String query = "SELECT `name`FROM `english";
                //         PreparedStatement st;
                //         st = con.prepareStatement(query);
                //         ResultSet rs = st.executeQuery();
                //         while(rs.next()){
                    //         coz1.addItem(rs.getString("name"));
                    //         }
                //   }
            //   catch(SQLException ex){
                //         Logger.getLogger(admit.class.getName()).log(Level.SEVERE, null, ex);
                //        }
            //
            //                 }
    }//GEN-LAST:event_facMouseClicked

    private void facActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_facActionPerformed
        if (fac.getSelectedItem() == "ICT") {
            try {
                Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/stok", "root", "");
                String query = "SELECT `name`FROM `ict";
                PreparedStatement st;
                st = con.prepareStatement(query);
                ResultSet rs = st.executeQuery();
                while (rs.next()) {
                    fac1.addItem(rs.getString("name"));

                }
            } catch (SQLException ex) {
                Logger.getLogger(flog.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else if (fac.getSelectedItem() == "LANGUAGE") {
            try {
                Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/stok", "root", "");
                String query = "SELECT `name`FROM `fl`";
                PreparedStatement st;
                st = con.prepareStatement(query);
                ResultSet rs = st.executeQuery();
                while (rs.next()) {
                    fac1.addItem(rs.getString("name"));
                }
            } catch (SQLException ex) {
                Logger.getLogger(flog.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else if (fac.getSelectedItem() == "FOOD PRODUCTION") {
            try {
                Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/stok", "root", "");
                String query = "SELECT `name`FROM `fp";
                PreparedStatement st;
                st = con.prepareStatement(query);
                ResultSet rs = st.executeQuery();
                while (rs.next()) {
                    fac1.addItem(rs.getString("name"));
                }
            } catch (SQLException ex) {
                Logger.getLogger(flog.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else if (fac.getSelectedItem() == "PROFESSIONAL COURSES") {
            try {
                Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/stok", "root", "");
                String query = "SELECT `name`FROM `pc";
                PreparedStatement st;
                st = con.prepareStatement(query);
                ResultSet rs = st.executeQuery();
                while (rs.next()) {
                    fac1.addItem(rs.getString("name"));
                }
            } catch (SQLException ex) {
                Logger.getLogger(flog.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
        else if (fac.getSelectedItem() == "OTHER") {
            try {
                Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/stok", "root", "");
                String query = "SELECT `name`FROM `coz";
                PreparedStatement st;
                st = con.prepareStatement(query);
                ResultSet rs = st.executeQuery();
                while (rs.next()) {
                    fac1.addItem(rs.getString("name"));
                }
            } catch (SQLException ex) {
                Logger.getLogger(flog.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_facActionPerformed

    private void facKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_facKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            fac1.requestFocus();
        }
    }//GEN-LAST:event_facKeyPressed

    private void admKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_admKeyPressed
     
      if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        PreparedStatement st;
        try {
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/stok", "root", "");
            String sql = "SELECT * FROM reg WHERE adm= '" + adm.getText() + "'";
            // java.sql.PreparedStatement st;
            st = con.prepareStatement(sql);
            //st.setString(1, user.getText());
            ResultSet rs = st.executeQuery(sql);
            if (rs.next() == true) {

                JOptionPane.showMessageDialog(null, "" + adm.getText() + ", is are already registered into the System");
                adm.setText("");
                num.setText("");
            }
else{
      num.requestFocus();
      
      }
        } catch (SQLException ex) {
            Logger.getLogger(registration.class.getName()).log(Level.SEVERE, null, ex);
        }
      
      
      }
      
        
    }//GEN-LAST:event_admKeyPressed

    private void admKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_admKeyReleased
//        PreparedStatement st;
//        try {
//            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/stok", "root", "");
//            String sql = "SELECT * FROM reg WHERE adm= '" + adm.getText() + "'";
//            // java.sql.PreparedStatement st;
//            st = con.prepareStatement(sql);
//            //st.setString(1, user.getText());
//            ResultSet rs = st.executeQuery(sql);
//            if (rs.next() == true) {
//
//                JOptionPane.showMessageDialog(null, "" + adm.getText() + ", is are already registered into the System");
//                adm.setText("");
//                num.setText("");
//            }
//
//        } catch (SQLException ex) {
//            Logger.getLogger(registration.class.getName()).log(Level.SEVERE, null, ex);
//        }
    }//GEN-LAST:event_admKeyReleased

    private void admKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_admKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_admKeyTyped

    private void admActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_admActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_admActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new registration().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField adm;
    private javax.swing.JTextField cont;
    private javax.swing.JTextField cont1;
    private com.toedter.calendar.JDateChooser dat;
    private javax.swing.JComboBox<String> disp;
    private javax.swing.JComboBox<String> disp1;
    private javax.swing.JComboBox<String> fac;
    private javax.swing.JComboBox<String> fac1;
    private javax.swing.JComboBox<String> fac2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JTextField num;
    private javax.swing.JTextField show;
    // End of variables declaration//GEN-END:variables
}
